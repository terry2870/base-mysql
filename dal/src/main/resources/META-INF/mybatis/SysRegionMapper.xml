<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.base.dal.ISysRegionDAO">
	<resultMap id="BaseResultMap" type="com.base.dal.model.SysRegion">
		<id column="region_id" property="regionId" jdbcType="INTEGER" />
		<result column="region_name" property="regionName" jdbcType="VARCHAR" />
		<result column="region_code" property="regionCode" jdbcType="VARCHAR" />
		<result column="parent_region_id" property="parentRegionId"
			jdbcType="INTEGER" />
		<result column="sort_number" property="sortNumber" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="TINYINT" />
	</resultMap>

	<sql id="Base_Column_List">
		region_id, region_name, region_code, parent_region_id, sort_number, status
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from sys_region
		where region_id = #{regionId,jdbcType=INTEGER}
	</select>
	<select id="queryRegionInfoByParentRegionId" resultMap="BaseResultMap">
		select * from sys_region where status=1 and parent_region_id=#{parentRegionId} order by sort_number
	</select>
	
	<select id="queryAllRegion" resultMap="BaseResultMap">
		select * from sys_region where status=1 order by sort_number
	</select>
	
	<!-- 根据镇id，递归查询省市县 -->
	<select id="selectRegionByTownIdRecursion" resultType="com.base.dal.model.RegionInfos">
		select t1.region_id townId, t1.region_name townName, t2.region_id countyId, t2.region_name countyName, t3.region_id cityId, t3.region_name cityName, t4.region_id provinceId, t4.region_name provinceName
		from sys_region t1 
		left join sys_region t2 on t1.parent_region_id=t2.region_id
		left join sys_region t3 on t2.parent_region_id=t3.region_id
		left join sys_region t4 on t3.parent_region_id=t4.region_id
		where t1.region_id in (${regionIds}) and t1.status=1 and t2.status=1 and t3.status=1 and t4.status=1
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from sys_region
		where region_id = #{regionId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.base.dal.model.SysRegion">
		insert into sys_region (region_name, region_code,
		parent_region_id, sort_number, status)
		values (#{regionName,jdbcType=VARCHAR},
		#{regionCode,jdbcType=VARCHAR},
		#{parentRegionId,jdbcType=INTEGER}, #{sortNumber,jdbcType=INTEGER}, #{status})
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.base.dal.model.SysRegion">
		update sys_region
		<set>
			<if test="regionName != null">
				region_name = #{regionName,jdbcType=VARCHAR},
			</if>
			<if test="regionCode != null">
				region_code = #{regionCode,jdbcType=VARCHAR},
			</if>
			<if test="parentRegionId != null">
				parent_region_id = #{parentRegionId,jdbcType=INTEGER},
			</if>
			<if test="sortNumber != null">
				sort_number = #{sortNumber,jdbcType=INTEGER},
			</if>
		</set>
		where region_id = #{regionId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.base.dal.model.SysRegion">
		update sys_region
		set region_name = #{regionName,jdbcType=VARCHAR},
		region_code = #{regionCode,jdbcType=VARCHAR},
		parent_region_id = #{parentRegionId,jdbcType=INTEGER},
		sort_number = #{sortNumber,jdbcType=INTEGER}
		where region_id = #{regionId,jdbcType=INTEGER}
	</update>
</mapper>